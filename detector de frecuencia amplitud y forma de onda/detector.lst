;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 20/11/2020 22:59:40
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2928      	GOTO       296
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AD      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AC      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;_.c,44 :: 		void interrupt(void)
;_.c,46 :: 		INTCON.GIE = 0;        // Se deshabilitan todas las interrupciones
0x000B	0x138B      	BCF        INTCON, 7
;_.c,47 :: 		if (INTCON.T0IF == 1 ) // se chequea si el timer 0 fue el causante
0x000C	0x1D0B      	BTFSS      INTCON, 2
0x000D	0x2810      	GOTO       L_interrupt0
;_.c,49 :: 		INTCON.T0IF = 0;   //se baja la bandera del timer0
0x000E	0x110B      	BCF        INTCON, 2
;_.c,50 :: 		ctrl++;            // se lleva control del numero de interrupciones
0x000F	0x0AA9      	INCF       _ctrl, 1
;_.c,51 :: 		}
L_interrupt0:
;_.c,52 :: 		INTCON.GIE = 1;        //se Habilitan todas las interrupciones
0x0010	0x178B      	BSF        INTCON, 7
;_.c,53 :: 		}
L_end_interrupt:
L__interrupt7:
0x0011	0x082C      	MOVF       ___savePCLATH, 0
0x0012	0x008A      	MOVWF      PCLATH
0x0013	0x0E2D      	SWAPF      ___saveSTATUS, 0
0x0014	0x0083      	MOVWF      STATUS
0x0015	0x0EFF      	SWAPF      R15, 1
0x0016	0x0E7F      	SWAPF      R15, 0
0x0017	0x0009      	RETFIE
; end of _interrupt
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0018	0x1683      	BSF        STATUS, 5
0x0019	0x1303      	BCF        STATUS, 6
0x001A	0x1898      	BTFSC      TXSTA, 1
0x001B	0x281E      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x001C	0x0000      	NOP
0x001D	0x2818      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x001E	0x1283      	BCF        STATUS, 5
0x001F	0x084F      	MOVF       FARG_UART1_Write_data_, 0
0x0020	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x0021	0x0008      	RETURN
; end of _UART1_Write
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0022	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0023	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0024	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0025	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0026	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0027	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0028	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0029	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x002A	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x002B	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x002C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x002D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x002E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x002F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0030	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0031	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0032	0x283A      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0033	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0034	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0035	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0036	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0037	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0038	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0039	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x003A	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x003B	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x003C	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x003D	0x2828      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x003E	0x0008      	RETURN
; end of _Div_16X16_U
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x003F	0x1283      	BCF        STATUS, 5
0x0040	0x1303      	BCF        STATUS, 6
0x0041	0x01CC      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0042	0x084A      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x0043	0x0084      	MOVWF      FSR
0x0044	0x0800      	MOVF       INDF, 0
0x0045	0x00CB      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x0046	0x084B      	MOVF       UART1_Write_Text_data__L0, 0
0x0047	0x3A00      	XORLW      0
0x0048	0x1903      	BTFSC      STATUS, 2
0x0049	0x2854      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x004A	0x084B      	MOVF       UART1_Write_Text_data__L0, 0
0x004B	0x00CF      	MOVWF      FARG_UART1_Write_data_
0x004C	0x2018      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x004D	0x0ACC      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x004E	0x084C      	MOVF       UART1_Write_Text_counter_L0, 0
0x004F	0x074A      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0050	0x0084      	MOVWF      FSR
0x0051	0x0800      	MOVF       INDF, 0
0x0052	0x00CB      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x0053	0x2846      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x0054	0x0008      	RETURN
; end of _UART1_Write_Text
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0055	0x1283      	BCF        STATUS, 5
0x0056	0x1303      	BCF        STATUS, 6
0x0057	0x082B      	MOVF       ___DoICPAddr+1, 0
0x0058	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0059	0x082A      	MOVF       ___DoICPAddr, 0
0x005A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x005B	0x0008      	RETURN
; end of _____DoICP
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1303      	BCF        STATUS, 6
0x005E	0x01CD      	CLRF       WordToStr_len_L0
L_WordToStr11:
0x005F	0x3005      	MOVLW      5
0x0060	0x024D      	SUBWF      WordToStr_len_L0, 0
0x0061	0x1803      	BTFSC      STATUS, 0
0x0062	0x286A      	GOTO       L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0063	0x084D      	MOVF       WordToStr_len_L0, 0
0x0064	0x074C      	ADDWF      FARG_WordToStr_output, 0
0x0065	0x0084      	MOVWF      FSR
0x0066	0x3020      	MOVLW      32
0x0067	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,103 :: 		
0x0068	0x0ACD      	INCF       WordToStr_len_L0, 1
;__Lib_Conversions.c,104 :: 		
0x0069	0x285F      	GOTO       L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x006A	0x084D      	MOVF       WordToStr_len_L0, 0
0x006B	0x074C      	ADDWF      FARG_WordToStr_output, 0
0x006C	0x0084      	MOVWF      FSR
0x006D	0x0180      	CLRF       INDF
0x006E	0x03CD      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x006F	0x084D      	MOVF       WordToStr_len_L0, 0
0x0070	0x074C      	ADDWF      FARG_WordToStr_output, 0
0x0071	0x00CE      	MOVWF      FLOC__WordToStr
0x0072	0x300A      	MOVLW      10
0x0073	0x00F4      	MOVWF      R4
0x0074	0x01F5      	CLRF       R4+1
0x0075	0x084A      	MOVF       FARG_WordToStr_input, 0
0x0076	0x00F0      	MOVWF      R0
0x0077	0x084B      	MOVF       FARG_WordToStr_input+1, 0
0x0078	0x00F1      	MOVWF      R0+1
0x0079	0x2022      	CALL       _Div_16X16_U
0x007A	0x0878      	MOVF       R8, 0
0x007B	0x00F0      	MOVWF      R0
0x007C	0x0879      	MOVF       R8+1, 0
0x007D	0x00F1      	MOVWF      R0+1
0x007E	0x3030      	MOVLW      48
0x007F	0x07F0      	ADDWF      R0, 1
0x0080	0x084E      	MOVF       FLOC__WordToStr, 0
0x0081	0x0084      	MOVWF      FSR
0x0082	0x0870      	MOVF       R0, 0
0x0083	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,109 :: 		
0x0084	0x300A      	MOVLW      10
0x0085	0x00F4      	MOVWF      R4
0x0086	0x01F5      	CLRF       R4+1
0x0087	0x084A      	MOVF       FARG_WordToStr_input, 0
0x0088	0x00F0      	MOVWF      R0
0x0089	0x084B      	MOVF       FARG_WordToStr_input+1, 0
0x008A	0x00F1      	MOVWF      R0+1
0x008B	0x2022      	CALL       _Div_16X16_U
0x008C	0x0870      	MOVF       R0, 0
0x008D	0x00CA      	MOVWF      FARG_WordToStr_input
0x008E	0x0871      	MOVF       R0+1, 0
0x008F	0x00CB      	MOVWF      FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x0090	0x3000      	MOVLW      0
0x0091	0x0671      	XORWF      R0+1, 0
0x0092	0x1D03      	BTFSS      STATUS, 2
0x0093	0x2896      	GOTO       L__WordToStr379
0x0094	0x3000      	MOVLW      0
0x0095	0x0670      	XORWF      R0, 0
L__WordToStr379:
0x0096	0x1D03      	BTFSS      STATUS, 2
0x0097	0x2899      	GOTO       L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0098	0x289B      	GOTO       L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0099	0x03CD      	DECF       WordToStr_len_L0, 1
;__Lib_Conversions.c,113 :: 		
0x009A	0x286F      	GOTO       L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x009B	0x0008      	RETURN
; end of _WordToStr
_printf:
;_.c,36 :: 		void printf(unsigned char msg[])
;_.c,38 :: 		UART1_Write_Text(msg);
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
0x009E	0x0841      	MOVF       FARG_printf_msg, 0
0x009F	0x00CA      	MOVWF      FARG_UART1_Write_Text_uart_text
0x00A0	0x203F      	CALL       _UART1_Write_Text
;_.c,39 :: 		}
L_end_printf:
0x00A1	0x0008      	RETURN
; end of _printf
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x00A2	0x1283      	BCF        STATUS, 5
0x00A3	0x1303      	BCF        STATUS, 6
0x00A4	0x01C6      	CLRF       IntToStr_negative_L0
0x00A5	0x01C7      	CLRF       IntToStr_negative_L0+1
;__Lib_Conversions.c,202 :: 		
0x00A6	0x0841      	MOVF       FARG_IntToStr_input, 0
0x00A7	0x00C8      	MOVWF      IntToStr_inword_L0
0x00A8	0x0842      	MOVF       FARG_IntToStr_input+1, 0
0x00A9	0x00C9      	MOVWF      IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x00AA	0x3080      	MOVLW      128
0x00AB	0x0642      	XORWF      FARG_IntToStr_input+1, 0
0x00AC	0x00F0      	MOVWF      R0
0x00AD	0x3080      	MOVLW      128
0x00AE	0x0270      	SUBWF      R0, 0
0x00AF	0x1D03      	BTFSS      STATUS, 2
0x00B0	0x28B3      	GOTO       L__IntToStr387
0x00B1	0x3000      	MOVLW      0
0x00B2	0x0241      	SUBWF      FARG_IntToStr_input, 0
L__IntToStr387:
0x00B3	0x1803      	BTFSC      STATUS, 0
0x00B4	0x28C1      	GOTO       L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x00B5	0x3001      	MOVLW      1
0x00B6	0x00C6      	MOVWF      IntToStr_negative_L0
0x00B7	0x3000      	MOVLW      0
0x00B8	0x00C7      	MOVWF      IntToStr_negative_L0+1
;__Lib_Conversions.c,205 :: 		
0x00B9	0x0841      	MOVF       FARG_IntToStr_input, 0
0x00BA	0x3C00      	SUBLW      0
0x00BB	0x00C8      	MOVWF      IntToStr_inword_L0
0x00BC	0x0842      	MOVF       FARG_IntToStr_input+1, 0
0x00BD	0x1C03      	BTFSS      STATUS, 0
0x00BE	0x3E01      	ADDLW      1
0x00BF	0x01C9      	CLRF       IntToStr_inword_L0+1
0x00C0	0x02C9      	SUBWF      IntToStr_inword_L0+1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x00C1	0x0848      	MOVF       IntToStr_inword_L0, 0
0x00C2	0x00CA      	MOVWF      FARG_WordToStr_input
0x00C3	0x0849      	MOVF       IntToStr_inword_L0+1, 0
0x00C4	0x00CB      	MOVWF      FARG_WordToStr_input+1
0x00C5	0x0843      	MOVF       FARG_IntToStr_output, 0
0x00C6	0x00CC      	MOVWF      FARG_WordToStr_output
0x00C7	0x205C      	CALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x00C8	0x3006      	MOVLW      6
0x00C9	0x00C4      	MOVWF      IntToStr_i_L0
0x00CA	0x3000      	MOVLW      0
0x00CB	0x00C5      	MOVWF      IntToStr_i_L0+1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x00CC	0x0845      	MOVF       IntToStr_i_L0+1, 0
0x00CD	0x3C00      	SUBLW      0
0x00CE	0x1D03      	BTFSS      STATUS, 2
0x00CF	0x28D2      	GOTO       L__IntToStr388
0x00D0	0x0844      	MOVF       IntToStr_i_L0, 0
0x00D1	0x3C00      	SUBLW      0
L__IntToStr388:
0x00D2	0x1803      	BTFSC      STATUS, 0
0x00D3	0x28ED      	GOTO       L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x00D4	0x0844      	MOVF       IntToStr_i_L0, 0
0x00D5	0x0743      	ADDWF      FARG_IntToStr_output, 0
0x00D6	0x00F2      	MOVWF      R2
0x00D7	0x3001      	MOVLW      1
0x00D8	0x0244      	SUBWF      IntToStr_i_L0, 0
0x00D9	0x00F0      	MOVWF      R0
0x00DA	0x3000      	MOVLW      0
0x00DB	0x1C03      	BTFSS      STATUS, 0
0x00DC	0x3E01      	ADDLW      1
0x00DD	0x0245      	SUBWF      IntToStr_i_L0+1, 0
0x00DE	0x00F1      	MOVWF      R0+1
0x00DF	0x0870      	MOVF       R0, 0
0x00E0	0x0743      	ADDWF      FARG_IntToStr_output, 0
0x00E1	0x0084      	MOVWF      FSR
0x00E2	0x0800      	MOVF       INDF, 0
0x00E3	0x00F0      	MOVWF      R0
0x00E4	0x0872      	MOVF       R2, 0
0x00E5	0x0084      	MOVWF      FSR
0x00E6	0x0870      	MOVF       R0, 0
0x00E7	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,212 :: 		
0x00E8	0x3001      	MOVLW      1
0x00E9	0x02C4      	SUBWF      IntToStr_i_L0, 1
0x00EA	0x1C03      	BTFSS      STATUS, 0
0x00EB	0x03C5      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,213 :: 		
0x00EC	0x28CC      	GOTO       L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x00ED	0x0843      	MOVF       FARG_IntToStr_output, 0
0x00EE	0x0084      	MOVWF      FSR
0x00EF	0x3020      	MOVLW      32
0x00F0	0x0080      	MOVWF      INDF
;__Lib_Conversions.c,215 :: 		
0x00F1	0x0846      	MOVF       IntToStr_negative_L0, 0
0x00F2	0x0447      	IORWF      IntToStr_negative_L0+1, 0
0x00F3	0x1903      	BTFSC      STATUS, 2
0x00F4	0x290B      	GOTO       L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x00F5	0x01C4      	CLRF       IntToStr_i_L0
0x00F6	0x01C5      	CLRF       IntToStr_i_L0+1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x00F7	0x0844      	MOVF       IntToStr_i_L0, 0
0x00F8	0x0743      	ADDWF      FARG_IntToStr_output, 0
0x00F9	0x0084      	MOVWF      FSR
0x00FA	0x0800      	MOVF       INDF, 0
0x00FB	0x3A20      	XORLW      32
0x00FC	0x1D03      	BTFSS      STATUS, 2
0x00FD	0x2902      	GOTO       L_IntToStr42
0x00FE	0x0AC4      	INCF       IntToStr_i_L0, 1
0x00FF	0x1903      	BTFSC      STATUS, 2
0x0100	0x0AC5      	INCF       IntToStr_i_L0+1, 1
0x0101	0x28F7      	GOTO       L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0102	0x3001      	MOVLW      1
0x0103	0x02C4      	SUBWF      IntToStr_i_L0, 1
0x0104	0x1C03      	BTFSS      STATUS, 0
0x0105	0x03C5      	DECF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,219 :: 		
0x0106	0x0844      	MOVF       IntToStr_i_L0, 0
0x0107	0x0743      	ADDWF      FARG_IntToStr_output, 0
0x0108	0x0084      	MOVWF      FSR
0x0109	0x302D      	MOVLW      45
0x010A	0x0080      	MOVWF      INDF
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x010B	0x0008      	RETURN
; end of _IntToStr
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x010C	0x2055      	CALL       _____DoICP
0x010D	0x118A      	BCF        PCLATH, 3
0x010E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x010F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0110	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0111	0x0AAA      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0112	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0113	0x0AAB      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0114	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0115	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0116	0x290C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0117	0x0008      	RETURN
; end of ___CC2DW
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x0118	0x1683      	BSF        STATUS, 5
0x0119	0x1303      	BCF        STATUS, 6
0x011A	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x011B	0x3090      	MOVLW      144
0x011C	0x1283      	BCF        STATUS, 5
0x011D	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x011E	0x1683      	BSF        STATUS, 5
0x011F	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0120	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0121	0x1283      	BCF        STATUS, 5
0x0122	0x1E8C      	BTFSS      PIR1, 5
0x0123	0x2927      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0124	0x081A      	MOVF       RCREG, 0
0x0125	0x00F0      	MOVWF      R0
0x0126	0x2921      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x0127	0x0008      	RETURN
; end of _UART1_Init
_main:
0x0128	0x1283      	BCF        STATUS, 5
0x0129	0x1303      	BCF        STATUS, 6
0x012A	0x01A0      	CLRF       _print
0x012B	0x01A1      	CLRF       _frecuency
0x012C	0x01A2      	CLRF       34
0x012D	0x01A3      	CLRF       _text
0x012E	0x01A4      	CLRF       36
0x012F	0x01A5      	CLRF       37
0x0130	0x01A6      	CLRF       38
0x0131	0x01A7      	CLRF       39
0x0132	0x01A8      	CLRF       40
0x0133	0x01A9      	CLRF       _ctrl
;_.c,56 :: 		int main(void)
;_.c,59 :: 		TRISC = 0x00;
0x0134	0x1683      	BSF        STATUS, 5
0x0135	0x0187      	CLRF       TRISC
;_.c,60 :: 		PORTC = 0x00;         //se inicializa el puerto c e 0
0x0136	0x1283      	BCF        STATUS, 5
0x0137	0x0187      	CLRF       PORTC
;_.c,61 :: 		OPTION_REG = 0x24;    //configurando timer0 como temporizador con un preescalador de 1:32
0x0138	0x3024      	MOVLW      36
0x0139	0x1683      	BSF        STATUS, 5
0x013A	0x0081      	MOVWF      OPTION_REG
;_.c,62 :: 		T1CON  = 0x03;        //configurando timer1 como contador
0x013B	0x3003      	MOVLW      3
0x013C	0x1283      	BCF        STATUS, 5
0x013D	0x0090      	MOVWF      T1CON
;_.c,63 :: 		TMR0   = 0;           //inicializando timer0 en 0 para segurar que este limpio
0x013E	0x0181      	CLRF       TMR0
;_.c,64 :: 		OPTION_REG.T0CS = 0;  //se habilita el timer 0
0x013F	0x1683      	BSF        STATUS, 5
0x0140	0x1281      	BCF        OPTION_REG, 5
;_.c,65 :: 		INTCON =   0xE0;      //habilitando las interrupciones del timer0
0x0141	0x30E0      	MOVLW      224
0x0142	0x008B      	MOVWF      INTCON
;_.c,66 :: 		TMR1H  = 0x00;        //registro de los primeros 8 bits del timer1 se llena ya que solo trabajaremos con TMR1L
0x0143	0x1283      	BCF        STATUS, 5
0x0144	0x018F      	CLRF       TMR1H
;_.c,67 :: 		TMR1L  = 0x00;        //registro de los segiundos 8 bits del timer1
0x0145	0x018E      	CLRF       TMR1L
;_.c,69 :: 		UART1_Init(9600);
0x0146	0x3019      	MOVLW      25
0x0147	0x1683      	BSF        STATUS, 5
0x0148	0x0099      	MOVWF      SPBRG
0x0149	0x1518      	BSF        TXSTA, 2
0x014A	0x2118      	CALL       _UART1_Init
;_.c,70 :: 		UART1_Write_Text("FRECUENCIA:\n\r");
0x014B	0x3046      	MOVLW      70
0x014C	0x00AE      	MOVWF      ?lstr1__
0x014D	0x3052      	MOVLW      82
0x014E	0x00AF      	MOVWF      ?lstr1__+1
0x014F	0x3045      	MOVLW      69
0x0150	0x00B0      	MOVWF      ?lstr1__+2
0x0151	0x3043      	MOVLW      67
0x0152	0x00B1      	MOVWF      ?lstr1__+3
0x0153	0x3055      	MOVLW      85
0x0154	0x00B2      	MOVWF      ?lstr1__+4
0x0155	0x3045      	MOVLW      69
0x0156	0x00B3      	MOVWF      ?lstr1__+5
0x0157	0x304E      	MOVLW      78
0x0158	0x00B4      	MOVWF      ?lstr1__+6
0x0159	0x3043      	MOVLW      67
0x015A	0x00B5      	MOVWF      ?lstr1__+7
0x015B	0x3049      	MOVLW      73
0x015C	0x00B6      	MOVWF      ?lstr1__+8
0x015D	0x3041      	MOVLW      65
0x015E	0x00B7      	MOVWF      ?lstr1__+9
0x015F	0x303A      	MOVLW      58
0x0160	0x00B8      	MOVWF      ?lstr1__+10
0x0161	0x300A      	MOVLW      10
0x0162	0x00B9      	MOVWF      ?lstr1__+11
0x0163	0x300D      	MOVLW      13
0x0164	0x00BA      	MOVWF      ?lstr1__+12
0x0165	0x01BB      	CLRF       ?lstr1__+13
0x0166	0x302E      	MOVLW      ?lstr1__
0x0167	0x00CA      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0168	0x203F      	CALL       _UART1_Write_Text
;_.c,72 :: 		while(1)
L_main1:
;_.c,81 :: 		if (ctrl==123)
0x0169	0x0829      	MOVF       _ctrl, 0
0x016A	0x3A7B      	XORLW      123
0x016B	0x1D03      	BTFSS      STATUS, 2
0x016C	0x296F      	GOTO       L_main3
;_.c,83 :: 		print=1;
0x016D	0x3001      	MOVLW      1
0x016E	0x00A0      	MOVWF      _print
;_.c,84 :: 		}
L_main3:
;_.c,86 :: 		if (print==1)
0x016F	0x0820      	MOVF       _print, 0
0x0170	0x3A01      	XORLW      1
0x0171	0x1D03      	BTFSS      STATUS, 2
0x0172	0x2999      	GOTO       L_main4
;_.c,88 :: 		frecuency= (TMR1H<<8) + (TMR1L);
0x0173	0x080F      	MOVF       TMR1H, 0
0x0174	0x00F1      	MOVWF      R0+1
0x0175	0x01F0      	CLRF       R0
0x0176	0x080E      	MOVF       TMR1L, 0
0x0177	0x07F0      	ADDWF      R0, 1
0x0178	0x1803      	BTFSC      STATUS, 0
0x0179	0x0AF1      	INCF       R0+1, 1
0x017A	0x0870      	MOVF       R0, 0
0x017B	0x00A1      	MOVWF      _frecuency
0x017C	0x0871      	MOVF       R0+1, 0
0x017D	0x00A2      	MOVWF      _frecuency+1
;_.c,89 :: 		IntToStr(frecuency, text); //imprimimos el valor acumulado en TIM1L
0x017E	0x0870      	MOVF       R0, 0
0x017F	0x00C1      	MOVWF      FARG_IntToStr_input
0x0180	0x0871      	MOVF       R0+1, 0
0x0181	0x00C2      	MOVWF      FARG_IntToStr_input+1
0x0182	0x3023      	MOVLW      _text
0x0183	0x00C3      	MOVWF      FARG_IntToStr_output
0x0184	0x20A2      	CALL       _IntToStr
;_.c,90 :: 		printf(text);
0x0185	0x3023      	MOVLW      _text
0x0186	0x00C1      	MOVWF      FARG_printf_msg
0x0187	0x209C      	CALL       _printf
;_.c,91 :: 		printf("HZ\r\n");
0x0188	0x3048      	MOVLW      72
0x0189	0x00BC      	MOVWF      ?lstr2__
0x018A	0x305A      	MOVLW      90
0x018B	0x00BD      	MOVWF      ?lstr2__+1
0x018C	0x300D      	MOVLW      13
0x018D	0x00BE      	MOVWF      ?lstr2__+2
0x018E	0x300A      	MOVLW      10
0x018F	0x00BF      	MOVWF      ?lstr2__+3
0x0190	0x01C0      	CLRF       ?lstr2__+4
0x0191	0x303C      	MOVLW      ?lstr2__
0x0192	0x00C1      	MOVWF      FARG_printf_msg
0x0193	0x209C      	CALL       _printf
;_.c,92 :: 		return 1;
0x0194	0x3001      	MOVLW      1
0x0195	0x00F0      	MOVWF      R0
0x0196	0x3000      	MOVLW      0
0x0197	0x00F1      	MOVWF      R0+1
0x0198	0x299A      	GOTO       L_end_main
;_.c,93 :: 		}
L_main4:
;_.c,94 :: 		}
0x0199	0x2969      	GOTO       L_main1
;_.c,95 :: 		}
L_end_main:
0x019A	0x299A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [20]    _interrupt
0x0018      [10]    _UART1_Write
0x0022      [29]    _Div_16X16_U
0x003F      [22]    _UART1_Write_Text
0x0055       [7]    _____DoICP
0x005C      [64]    _WordToStr
0x009C       [6]    _printf
0x00A2     [106]    _IntToStr
0x010C      [12]    ___CC2DW
0x0118      [16]    _UART1_Init
0x0128     [115]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [1]    _print
0x0021       [2]    _frecuency
0x0023       [6]    _text
0x0029       [1]    _ctrl
0x002A       [2]    ___DoICPAddr
0x002C       [1]    ___savePCLATH
0x002D       [1]    ___saveSTATUS
0x002E      [14]    ?lstr1__
0x003C       [5]    ?lstr2__
0x0041       [1]    FARG_printf_msg
0x0041       [2]    FARG_IntToStr_input
0x0043       [1]    FARG_IntToStr_output
0x0044       [2]    IntToStr_i_L0
0x0046       [2]    IntToStr_negative_L0
0x0048       [2]    IntToStr_inword_L0
0x004A       [1]    FARG_UART1_Write_Text_uart_text
0x004A       [2]    FARG_WordToStr_input
0x004B       [1]    UART1_Write_Text_data__L0
0x004C       [1]    UART1_Write_Text_counter_L0
0x004C       [1]    FARG_WordToStr_output
0x004D       [1]    WordToStr_len_L0
0x004E       [1]    FLOC__WordToStr
0x004F       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC6_bit
0x0087       [1]    TRISC
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
